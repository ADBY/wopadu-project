<?phpnamespace app\controllers;use Yii;use app\models\Admin;use app\models\LoginUser;use yii\data\ActiveDataProvider;use yii\web\Controller;use yii\web\NotFoundHttpException;use yii\filters\VerbFilter;/** * AdminController implements the CRUD actions for Admin model. */class AdminController extends Controller{		public function init(){		$session = Yii::$app->session;				if($session['super_admin'] == "YES")		{					}		else		{			return $this->goHome();		}	}	    public function behaviors()    {        return [            'verbs' => [                'class' => VerbFilter::className(),                'actions' => [                    'delete' => ['post'],                ],            ],        ];    }    /**     * Lists all Admin models.     * @return mixed     */    /*public function actionIndex()    {        $dataProvider = new ActiveDataProvider([            'query' => Admin::find(),        ]);        return $this->render('index', [            'dataProvider' => $dataProvider,        ]);    }*/    /**     * Displays a single Admin model.     * @param string $id     * @return mixed     */    public function actionView($id)    {        return $this->render('view', [            'model' => $this->findModel($id),        ]);    }		public function actionProfile()    {		$admin_details = Yii::$app->db->createCommand("SELECT * FROM admin where id = 1")->queryOne();		$login_details = Yii::$app->db->createCommand("SELECT * FROM login_user where id = 1")->queryOne();				$model = array_merge($admin_details, $login_details);				return $this->render('profile', [            'model' => $model,        ]);    }    /**     * Creates a new Admin model.     * If creation is successful, the browser will be redirected to the 'view' page.     * @return mixed     */    /*public function actionCreate()    {        $model = new Admin();        if ($model->load(Yii::$app->request->post()) && $model->save()) {            return $this->redirect(['view', 'id' => $model->id]);        } else {            return $this->render('create', [                'model' => $model,            ]);        }    }*/    /**     * Updates an existing Admin model.     * If update is successful, the browser will be redirected to the 'view' page.     * @param string $id     * @return mixed     */    public function actionUpdate()    {        $model_a = $this->findModel(1);		$model_l = LoginUser::findOne($model_a->login_id);				$cur_password = $model_l->password;				if(Yii::$app->request->post())		{			$model_l->attributes = $_POST['LoginUser'];			$model_a->attributes = $_POST['Admin'];						if($model_l->re_password != "")			{				if($model_l->password != "" && $model_l->password == $model_l->re_password)				{					$model_l->password = Yii::$app->security->generatePasswordHash($model_l->password);				}				else				{					$model_l->addError('password', 'Please enter same password twice');				}			}			else			{				$model_l->password = $cur_password;			}									$err_model = $model_l->getErrors();			if(isset($err_model['password'])) {				$error_1 = true;			} else {				$error_1 = false;			}						if($error_1 == false && $model_l->validate() && $model_a->validate())			{				$model_l->save();				$model_a->save();								Yii::$app->session->setFlash('admin_msg', 'Details has been updated successfully');            	return $this->redirect(['profile']);			}        }				return $this->render('update', [			'model_l' => $model_l,			'model_a' => $model_a,		]);    }    /**     * Deletes an existing Admin model.     * If deletion is successful, the browser will be redirected to the 'index' page.     * @param string $id     * @return mixed     */    /*public function actionDelete($id)    {        $this->findModel($id)->delete();        return $this->redirect(['index']);    }*/    /**     * Finds the Admin model based on its primary key value.     * If the model is not found, a 404 HTTP exception will be thrown.     * @param string $id     * @return Admin the loaded model     * @throws NotFoundHttpException if the model cannot be found     */    protected function findModel($id)    {        if (($model = Admin::findOne($id)) !== null) {            return $model;        } else {            throw new NotFoundHttpException('The requested page does not exist.');        }    }        public function actionTest($id)    {        $order_id = 694;        $order_detail_id = 764;        $user_id = $id;                Yii::$app->mycomponent->sendOrderReadyPush($order_id, $order_detail_id, $user_id);            }}